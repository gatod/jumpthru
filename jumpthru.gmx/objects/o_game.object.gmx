<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>p_gsm</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
globalvar Game, Player;

Game = id;

width = room_width;
height = room_height;
fullscreen = false;
scale = 2;

globalvar FONT, GRAVITY, FRICTION, WIDTH, HEIGHT, FRAMERATE, BASERATE, DELTA;
FONT = font_add_sprite(s_font, 33, false, 0);
GRAVITY = 0.5;
FRICTION = 0.5;
WIDTH = width;
HEIGHT = height;
FRAMERATE = 60;
BASERATE = 60;
DELTA = 1;

application_surface_draw_enable(false);

event_inherited();
ds_stack_push(opstack, OpCode.bootup);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(ds_stack_empty(opstack)) { opcode = ds_stack_pop(opstack); }
switch (opcode) {
  case OpCode.bootup:
    ds_stack_push(opstack, OpCode.resize_window);
    opsize += 1;
    break;
  case OpCode.resize_window:
    if (window_get_fullscreen() != fullscreen) { window_set_fullscreen(fullscreen); }
    if (os_browser != browser_not_a_browser) { window_set_rectangle(0, 0, browser_width, browser_height); }
    else if (fullscreen) { window_set_rectangle(0, 0, display_get_width(), display_get_height()); }
    else { ds_stack_push(opstack, $11); }
    var _w = WIDTH,
        _h = HEIGHT,
        _scale, _scalemax;
    if (os_browser == browser_not_a_browser) { _scalemax = (browser_height / height) }
    else { _scalemax = (display_get_height() / height); }
    if (scale == 0) { _scale = floor(_scalemax); }
    else if (scale &gt; 0) { _scale = scale; }
    else { _scale = _scalemax; }
    width = _w * _scale;
    height = _h *_scale;
    if (os_browser == browser_not_a_browser) { window_set_size(width, height); }
    opsize = 0;
    break;
  case OpCode.center_window:
    window_center();
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute Terrain Spawn Script
var _script = -1;
with (p_terrain) { event_user(1); }
room_speed = FRAMERATE;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(application_surface)) {
  var _x, _y;
  if (os_browser == browser_not_a_browser) {
    _x = ((window_get_width() / 2) - (width / 2));
    _y = ((window_get_height() / 2) - (height / 2));
  }
  else {
    _x = ((browser_width / 2) - (width / 2));
    _y = ((browser_height / 2) - (height / 2));
  }
  draw_surface_stretched(application_surface, _x, _y, width, height);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
