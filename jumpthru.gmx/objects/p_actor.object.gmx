<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization
xx = x;
yy = y;
//Single-frame speed
imp_x = 0;
imp_y = 0;
//Applied speed
spd_x = 0;
spd_y = 0;
g = GRAVITY; //Gravity
f = FRICTION; //Acceleration factor
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vertical Movement
//Apply forces
if (imp_y != 0) { spd_y += imp_y; }
if (spd_y != 0) {
  if (floor(yy) != y) { yy = y; }
  var _semisolid = instance_place(x, y, p_semisolid);
  yy += clamp(spd_y * DELTA, -16, 16);
  var _tile = instance_place(xx, yy, p_terrain),
  _dir = sign(spd_y);
  //Get out of tiles
  if (frac(yy) &gt; 0) {
    if (spd_y &gt; 0) { yy = floor(yy); }
    else { yy = ceil(yy); }
  }
  while (_tile &amp;&amp; place_meeting(xx, yy, _tile)) {
    if (place_meeting(xx, yy, p_solid) || ((_dir &gt; 0) &amp;&amp; place_meeting(xx, yy, p_semisolid) &amp;&amp; !_semisolid)) {
      yy -= _dir;
      spd_y = 0;
    }
    else { _tile = noone; }
  }
  y = floor(yy);
}
//Gravity
spd_y += (g * DELTA);
imp_y = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Horizontal Movement
//Acceleration
if ((spd_x == 0) || (sign(imp_x) == sign(spd_x))) { spd_x = min(abs(spd_x) + sqrt(abs(f) * DELTA), abs(imp_x)) * sign(imp_x); }
//Movemeent
if (spd_x != 0) {
  if (floor(xx) != x) { xx = x; }
  xx += clamp(spd_x * DELTA, -16, 16);
  //Get out of solid tiles
  var _dir = sign(spd_x);
  if (frac(xx) &gt; 0) {
    if (spd_x &gt; 0) { xx = ceil(xx); }
    else { xx = floor(xx); }
  }
  while (place_meeting(xx, yy, p_solid)) {
    xx -= _dir;
    spd_x = 0;
  }
}
x = clamp(floor(xx), 8, room_width - 8);
//Deceleration
if ((imp_x == 0) || (sign(spd_x) != sign(imp_x))) { spd_x = max(abs(spd_x) - sqrt(abs(f) * DELTA * (1 + (sign(imp_x != 0)))), 0) * sign(spd_x); }
imp_x = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
